package ${package.Controller};

import ${package.Service}.${table.serviceName};
import org.springframework.web.bind.annotation.RequestMapping;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import java.util.List;
import ${package.Entity}.${entity};
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.ResponseBody;
#set ($lowerServiceName=$table.serviceName.substring(0,1).toLowerCase()+$table.serviceName.substring(1,$table.serviceName.length()))
#set ($lowerEntity=$entity.substring(0,1).toLowerCase()+$entity.substring(1,$entity.length()))
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	private static final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);
	
	@Autowired
	private ${table.serviceName} ${lowerServiceName};
	
	@PostMapping
	public @ResponseBody Integer add${entity}(${entity} ${lowerEntity}){
		return ${lowerServiceName}.add${entity}(${lowerEntity});
	}
	
	@DeleteMapping
	public @ResponseBody ${entity} delete${entity}(${entity} ${lowerEntity}) {
		${lowerServiceName}.delete${entity}(${lowerEntity});
		return ${lowerEntity};
	}
	
	@PutMapping
	public @ResponseBody ${entity} update${entity}(${entity} ${lowerEntity}){
		${lowerServiceName}.update${entity}(${lowerEntity});
		return ${lowerEntity};
	}
	
	@GetMapping
	public @ResponseBody ${entity} select${entity}ById(${entity} ${lowerEntity}){
		return ${lowerServiceName}.select${entity}ById(${lowerEntity});
	}
	
	
	@GetMapping("/${lowerEntity}s")
	public @ResponseBody List<${entity}> select${entity}List(){
		return ${lowerServiceName}.select${entity}List();
	}

}
